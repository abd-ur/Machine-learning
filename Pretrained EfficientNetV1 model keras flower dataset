{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mangekkyo/Machine-learning/blob/main/Pretrained%20EfficientNetV1%20model%20keras%20flower%20dataset\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Loading dataset\n",
        "import pathlib\n",
        "d_url=\"https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz\"\n",
        "data_dir=tf.keras.utils.get_file('flower_photos.tar',origin=d_url,extract=True)\n",
        "data_dir=pathlib.Path(data_dir).with_suffix('')"
      ],
      "metadata": {
        "id": "LAhj-Fa5CsLH",
        "outputId": "e63f6ee6-0f4b-42eb-aefe-948f11a343f0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz\n",
            "228813984/228813984 [==============================] - 2s 0us/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Splitting data\n",
        "batch_size=32\n",
        "img_height=224\n",
        "img_width=224\n",
        "train_ds=tf.keras.utils.image_dataset_from_directory(data_dir,validation_split=0.2,subset=\"training\",seed=123,image_size=(img_height,img_width),batch_size=batch_size)\n",
        "val_ds=tf.keras.utils.image_dataset_from_directory(data_dir,validation_split=0.2,subset=\"validation\",seed=123,image_size=(img_height,img_width),batch_size=batch_size)"
      ],
      "metadata": {
        "id": "sv2Vq9-ZC1NL",
        "outputId": "8ece261d-b849-4487-afb8-456ddccbbefd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Found 3670 files belonging to 5 classes.\n",
            "Using 2936 files for training.\n",
            "Found 3670 files belonging to 5 classes.\n",
            "Using 734 files for validation.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Pretrained model simplified architechture wise build (Efficient net v1)\n",
        "import tensorflow as tf\n",
        "from tensorflow.keras import layers\n",
        "inputs=layers.Input(shape=(224,224,3))\n",
        "x=layers.Conv2D(32, kernel_size=3, strides=2, padding='same')(inputs)\n",
        "x=layers.BatchNormalization()(x)\n",
        "x=layers.Activation('swish')(x)\n",
        "x=layers.SeparableConv2D(16, kernel_size=3, strides=1, padding='same')(x)\n",
        "x=layers.BatchNormalization()(x)\n",
        "x=layers.Activation('swish')(x)\n",
        "x=layers.Conv2D(16,kernel_size=3, strides=2, padding='same')(x)\n",
        "x=layers.BatchNormalization()(x)\n",
        "x=layers.Activation('swish')(x)\n",
        "x=layers.SeparableConv2D(40, kernel_size=5, strides=2, padding='same')(x)\n",
        "x=layers.BatchNormalization()(x)\n",
        "x=layers.Activation('swish')(x)\n",
        "x=layers.GlobalAveragePooling2D()(x)\n",
        "outputs = layers.Dense(5, activation='softmax')(x)\n",
        "model=tf.keras.Model(inputs, outputs)\n",
        "model.summary()\n",
        "model.compile(optimizer='adam',loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),metrics=['accuracy'])"
      ],
      "metadata": {
        "id": "yDKopkoUjPPs",
        "outputId": "1c9f09f5-2471-434a-b401-b7260bd61fe8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"model_6\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " input_7 (InputLayer)        [(None, 224, 224, 3)]     0         \n",
            "                                                                 \n",
            " conv2d_12 (Conv2D)          (None, 112, 112, 32)      896       \n",
            "                                                                 \n",
            " batch_normalization_21 (Bat  (None, 112, 112, 32)     128       \n",
            " chNormalization)                                                \n",
            "                                                                 \n",
            " activation_21 (Activation)  (None, 112, 112, 32)      0         \n",
            "                                                                 \n",
            " separable_conv2d_10 (Separa  (None, 112, 112, 16)     816       \n",
            " bleConv2D)                                                      \n",
            "                                                                 \n",
            " batch_normalization_22 (Bat  (None, 112, 112, 16)     64        \n",
            " chNormalization)                                                \n",
            "                                                                 \n",
            " activation_22 (Activation)  (None, 112, 112, 16)      0         \n",
            "                                                                 \n",
            " conv2d_13 (Conv2D)          (None, 56, 56, 16)        2320      \n",
            "                                                                 \n",
            " batch_normalization_23 (Bat  (None, 56, 56, 16)       64        \n",
            " chNormalization)                                                \n",
            "                                                                 \n",
            " activation_23 (Activation)  (None, 56, 56, 16)        0         \n",
            "                                                                 \n",
            " separable_conv2d_11 (Separa  (None, 28, 28, 40)       1080      \n",
            " bleConv2D)                                                      \n",
            "                                                                 \n",
            " batch_normalization_24 (Bat  (None, 28, 28, 40)       160       \n",
            " chNormalization)                                                \n",
            "                                                                 \n",
            " activation_24 (Activation)  (None, 28, 28, 40)        0         \n",
            "                                                                 \n",
            " global_average_pooling2d_5   (None, 40)               0         \n",
            " (GlobalAveragePooling2D)                                        \n",
            "                                                                 \n",
            " dense_5 (Dense)             (None, 5)                 205       \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 5,733\n",
            "Trainable params: 5,525\n",
            "Non-trainable params: 208\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Train the CNN model\n",
        "perf=model.fit(train_ds, validation_data= val_ds,epochs=5, batch_size=80, verbose=1)"
      ],
      "metadata": {
        "id": "lF_3eVTOCXpp",
        "outputId": "33f6f972-f346-4231-8e67-50f282d5dfb6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/5\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/keras/backend.py:5612: UserWarning: \"`sparse_categorical_crossentropy` received `from_logits=True`, but the `output` argument was produced by a Softmax activation and thus does not represent logits. Was this intended?\n",
            "  output, from_logits = _get_logits(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "92/92 [==============================] - 168s 2s/step - loss: 1.3318 - accuracy: 0.4571 - val_loss: 1.5476 - val_accuracy: 0.3174\n",
            "Epoch 2/5\n",
            "92/92 [==============================] - 142s 2s/step - loss: 1.1707 - accuracy: 0.5358 - val_loss: 1.4970 - val_accuracy: 0.2847\n",
            "Epoch 3/5\n",
            "92/92 [==============================] - 139s 1s/step - loss: 1.1115 - accuracy: 0.5688 - val_loss: 1.4457 - val_accuracy: 0.3215\n",
            "Epoch 4/5\n",
            "92/92 [==============================] - 132s 1s/step - loss: 1.0560 - accuracy: 0.5971 - val_loss: 1.2942 - val_accuracy: 0.4005\n",
            "Epoch 5/5\n",
            "92/92 [==============================] - 150s 2s/step - loss: 0.9991 - accuracy: 0.6236 - val_loss: 1.0808 - val_accuracy: 0.5436\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot accuracy and loss for CNN model\n",
        "import matplotlib.pyplot as plt\n",
        "plt.figure(figsize=(12, 4))\n",
        "plt.subplot(1, 2, 1)\n",
        "plt.plot(perf.history['accuracy'], label='Training Accuracy')\n",
        "plt.plot(perf.history['val_accuracy'], label='Validation Accuracy')\n",
        "plt.xlabel('Epochs')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.subplot(1, 2, 2)\n",
        "plt.plot(perf.history['loss'], label='Training Loss')\n",
        "plt.plot(perf.history['val_loss'], label='Validation Loss')\n",
        "plt.xlabel('Epochs')\n",
        "plt.ylabel('Loss')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "x1SFafchDPzR",
        "outputId": "9517af3d-62cb-4518-fa34-7ead86d3753c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 388
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}